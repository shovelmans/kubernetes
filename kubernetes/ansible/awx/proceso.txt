Instalaste el AWX Operator con Helm

helm repo add awx-operator https://ansible-community.github.io/awx-operator-helm/
helm repo update
helm install awx-operator awx-operator/awx-operator -n awx --create-namespace


üîπ Esto despleg√≥ el operador (awx-operator-controller-manager) en el namespace awx.

Tambi√©n aplicaste los manifests con Kustomize

kubectl kustomize . | kubectl apply -f -


üîπ Esto cre√≥ los CRDs (awx.awx.ansible.com, etc.) que permiten definir un recurso de tipo AWX.
üëâ Aqu√≠ mezclaste Helm + Kustomize, pero como los CRDs y el operador son compatibles, no se estorbaron.

Definiste tu instancia AWX con awx.yaml

apiVersion: awx.ansible.com/v1beta1
kind: AWX
metadata:
  name: awx
  namespace: awx
spec:
  service_type: NodePort
  nodeport_port: 30080


Y lo aplicaste:

kubectl apply -f awx.yaml
kubectl apply -f awx-service.yaml


El operador cre√≥ todos los recursos de AWX

Base de datos (awx-postgres-13-0)

Servicios (awx-service, awx-postgres-13, etc.)

Pods de aplicaci√≥n (awx-task, awx-web)

Ahora est√°s esperando a que awx-web se ejecute

Estaba en Pending por falta de memoria, pero el autoscaler ya est√° a√±adiendo nodos.

‚úÖ En resumen, s√≠: los pasos fueron esos 5 que listaste.
Pero ojo: con Helm te bastaba (ya incluye CRDs y operador), lo de kubectl kustomize fue redundante.

kubectl get secret awx-admin-password -n awx -o jsonpath="{.data.password}" | base64 --decode; echo
